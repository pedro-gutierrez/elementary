kind: test
name: events
spec:
  steps:
    - title: Given the Afrofestival
      steps:
        - Given details for the Afrofestival
        - When I create that event
        - Then I should have a 201
    - title: Given the Feeling Festival
      steps:
        - Given details for the Feeling Festival
        - When I create that event
        - Then I should have a 201
    - title: Given details for the Afrofestival
      event:
        id: f538d736
        name: Afrofestival
        place: @place.id
        date: 2020-10-01T00:00:07Z
    - title: Given details for the Feeling Festival
      event:
        id: e7295fcb
        name: Feeling Festival
        place: @place.id
        date: 2020-10-01T00:00:07Z
    - title: When I create that event
      http:
        method: post
        url:
          - @baseUrl
          - /api/events
        headers:
          content-type: application/json
        body: @event
      as: latest
    - title: When I look for events nearby
      http:
        method: post
        url:
          - @baseUrl
          - /api/nearby
        headers:
          content-type: application/json
        body: @location
      as: latest
    - title: Then that event should match that item
      assert:
        equal:
          - @item.name
          - @event.name
    - title: When I get that event
      http:
        method: get
        url:
          - @baseUrl
          - /api/events/
          - @event.id
      as: latest
    - title: Then I should have that event
      expect:
        body:
          id: @event.id
      in: @latest
    - title: Given a fake event
      event:
        id: "unknown"
    - title: Given a cover
      cover:
        asset: cover.jpg
    - title: When I add that cover to that event
      http:
        method: post
        url:
          - @baseUrl
          - /api/events/
          - @event.id
          - /cover
        body: @cover.data
      as: latest

