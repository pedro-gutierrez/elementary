kind: test
name: events
spec:
  steps:
    - title: Given the Afrofestival
      steps:
        - Given the month of october
        - Given details for the Afrofestival
        - When I create that event
        - Then I should have a 201
    - title: Given the Feeling Festival
      steps:
        - Given the month of may
        - Given details for the Afrofestival
        - Given details for the Feeling Festival
        - When I create that event
        - Then I should have a 201
    - title: Given details for the Afrofestival
      event:
        id: f538d736
        name: Afrofestival
        place: @place.id
        starts:
          format_date:
            day: 1
            month: @month
            year: @year
        ends:
          format_date:
            day: 4
            month: @month
            year: @year
    - title: Given details for the Feeling Festival
      event:
        id: e7295fcb
        name: Feeling Festival
        place: @place.id
        starts:
          format_date:
            day: 30
            month: @month
            year: @year
        ends:
          format_date:
            day: 2
            month:
              sum:
                - 1
                - @month
            year: @year
    - title: Given the month of may
      month: 5
      year: 2020
    - title: Given next month
      let:
        in_one_month:
          format_date:
            date:
              in:
                month: 1
      in:
        starts: @in_one_month
        ends: @in_one_month
    - title: Given the month of october
      month: 10
      year: 2020
    - title: When I create that event
      http:
        method: post
        url:
          - @baseUrl
          - /api/events
        headers:
          content-type: application/json
          client-id: mobile
          client-secret: @clients.mobile
          authorization: @token
        body: @event
      as: latest
    - title: When I look for events nearby
      http:
        method: get
        url:
          - @baseUrl
          - /api/events
        headers:
          content-type: application/json
          client-id: mobile
          client-secret: @clients.mobile
          authorization: @token
        query: @location
      as: latest
    - title: When I look for events for that month
      http:
        method: get
        url:
          - @baseUrl
          - /api/events
        headers:
          content-type: application/json
          client-id: mobile
          client-secret: @clients.mobile
          authorization: @token
        query:
          month: @month
          year: @year
      as: latest
    - title: Then that event should match that item
      assert:
        equal:
          - @item.name
          - @event.name
    - title: When I get that event
      http:
        method: get
        url:
          - @baseUrl
          - /api/events/
          - @event.id
        headers:
          authorization: @token
          client-id: mobile
          client-secret: @clients.mobile
      as: latest
    - title: Then I should have that event
      expect:
        body:
          id: @event.id
      in: @latest
    - title: Given a fake event
      event:
        id: "unknown"
    - title: Given a cover
      cover:
        asset: cover.jpg
    - title: When I set that event cover
      http:
        method: post
        url:
          - @baseUrl
          - /api/events/
          - @event.id
          - /cover
        headers:
          client-id: mobile
          client-secret: @clients.mobile
          authorization: @token
        body: @cover.data
      as: latest
    - title: When I get that event cover
      http:
        method: get
        url:
          - @baseUrl
          - /api/events/
          - @event.id
          - /cover
        headers:
          client-id: mobile
          client-secret: @clients.mobile
          authorization: @token
      as: latest
    - title: When I reschedule that event
      http:
        method: put
        url:
          - @baseUrl
          - /api/events/
          - @event.id
        headers:
          client-id: mobile
          client-secret: @clients.mobile
          authorization: @token
          content-type: application/json
        body:
          starts: @starts
          ends: @ends
      as: latest
