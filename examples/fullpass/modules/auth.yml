kind: module
name: auth
spec:
  decoders:
    http:
      auth:
        headers:
          authorization:
            any: text
      anonymous:
        headers:
          without:
            - authorization
    store:
      granted:
        token:
          user:
            any: text
          acl:
            in: @acls
          expires:
            after:
              now: {}
      expired:
        token:
          expires:
            before:
              now: {}
      invalid:
        token:
          acl:
            not:
              in: @acls
      deleted:
        status: deleted
      user_found:
        user:
          any: object
      not_found:
        status: not_found
  update:
    auth:
      model:
        token: @data.headers.authorization
      cmds:
        store: find_token
    granted:
      model:
        user: @data.token.user
      cmds:
        store: find_user
    user_found:
      model:
        user: @data.user
    invalid:
      cmds:
        stop: unauthorized
    expired:
      cmds:
        store: delete_token
    not_found:
      cmds:
        stop: unauthorized
    deleted:
      cmds:
        stop: unauthorized
    anonymous:
      cmds:
        stop: unauthorized
  encoders:
    find_token:
      store: @store
      fetch:
        id: @token
      from: tokens
      as: token
    delete_token:
      store: @store
      delete:
        id: @token
      from: tokens
    find_user:
      store: @store
      fetch:
        id: @user
      from: users
      as: user
    unauthorized:
      status: 401
      headers:
        content-type: application/json
      body: {}
