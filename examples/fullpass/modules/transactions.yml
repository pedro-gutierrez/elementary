kind: module
name: transactions
spec:
  decoders:
    http:
      find:
        method: GET
      create:
        method: POST
        body:
          id:
            any: text
          offer:
            any: text
          demand:
            any: text
    store:
      not_found:
        status: not_found
      conflict:
        status: conflict
      created:
        status: created
      withdrawn_offer:
        offer:
          status: withdrawn
      expired_offer:
        offer:
          expires:
            before:
              today: {}
      offer:
        offer:
          id:
            any: text
          event:
            any: text
          kind:
            any: text
          genre:
            any: text
          asset:
            any: text
          status: active
          expires:
            not:
              before:
                today: {}
          owner:
            any: text
      withdrawn_demand:
        demand:
          status: withdrawn
      expired_demand:
        demand:
          expires:
            before:
              today: {}
      demand:
        demand:
          id:
            any: text
          kind:
            any: text
          genre:
            any: text
          expires:
            not:
              before:
                today: {}
          owner:
            other_than: @offer.owner
          status: active
      self_demand:
        demand:
          owner: @offer.owner
      asset:
        asset:
          any: object
      transactions:
        transactions:
          any: list
      future_event:
        event:
          id:
            any: text
          starts:
            not:
              before:
                today: {}
      past_event:
        event:
          id:
            any: text
          starts:
            before:
              today: {}
  update:
    create:
      model:
        id: @data.body.id
        minExpire:
          today: {}
        offer: @data.body.offer
        demand: @data.body.demand
      cmds:
        store: find_offer
    withdrawn_offer:
      cmds:
        return: unauthorized
    expired_offer:
      cmds:
        return: unauthorized
    offer:
      model:
        offer: @data.offer
      cmds:
        store: find_demand
    withdrawn_demand:
      cmds:
        return: unauthorized
    expired_demand:
      cmds:
        return: unauthorized
    self_demand:
      cmds:
        return: unauthorized
    demand:
      model:
        demand: @data.demand
      cmds:
        store: find_asset
    asset:
      model:
        asset: @data.asset
      cmds:
        store: find_event
    past_event:
      cmds:
        return: unauthorized
    future_event:
      model:
        event: @data.event
      cmds:
        store: create
    not_found:
      cmds:
        return: not_found
    conflict:
      cmds:
        return: conflict
    created:
      cmds:
        return: created
    find:
      cmds:
        store: find_all
    transactions:
      model:
        transactions: @data.transactions
      cmds:
        return: transactions
  encoders:
    find_demand:
      store: @store
      fetch:
        id: @demand
        genre: @offer.genre
        kind: @offer.kind
        event: @offer.event
      from: demands
      as: demand
    find_offer:
      store: @store
      fetch:
        id: @offer
      from: offers
      as: offer
    find_asset:
      store: @store
      fetch:
        id: @offer.asset
        genre: @offer.genre
        kind: @offer.kind
        event: @offer.event
      from: assets
      as: asset
    find_event:
      store: @store
      fetch:
        id: @asset.event
      from: events
      as: event
    create:
      store: @store
      insert:
        id: @id
        demand: @demand.id
        offer: @offer.id
        asset: @asset.id
        kind: @asset.kind
        genre: @asset.genre
        event: @event.id
        created:
          now: {}
        owner: @user.id
        peer:
          either:
            - when:
                equal:
                  - @demand.owner
                  - @user.id
              then: @offer.owner
            - @demand.owner
      into: transactions
    find_all:
      store: @store
      find:
        $or:
          - owner: @user.id
          - peer: @user.id
      from: transactions
      as: transactions
    transactions:
      status: 200
      headers:
        content-type: application/json
      body: @transactions

