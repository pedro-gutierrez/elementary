kind: module
name: add_user_to_organization
spec:
  decoders:
    http:
      create:
        params:
          id:
            any: text
        body:
          user:
            any: text
          role:
            one_of:
              - client
              - contractor
    store:
      not_found:
        user: not_found
      user:
        user:
          any: object
      invited: updated
  update:
    create:
      model:
        member: @data.body.user
        memberRole: @data.body.role
      cmds:
        either:
          - when:
              encoder: is_owner
            return: unauthorized
          - when:
              encoder: is_member
            return: conflict
          - store: find_user
    not_found:
      cmds:
        return: not_found
    user:
      cmds:
        store: create
    invited:
      cmds:
        return: created
  encoders:
    is_owner:
      match: @organization.owner
      with: @member
    is_member:
      match: @organization.users
      with:
        list:
          with:
            id: @member
    find_user:
      store: @store
      fetch:
        id: @member
      from: users
      as: user
    create:
      store: @store
      update:
        $push:
          users:
            id: @member
            role: @memberRole
      where:
        id: @organization.id
      into: organizations
