kind: module
name: ui_tests
spec:
  init:
    model:
      delay: 0
      tests: []
      indexed: {}
      query: ""
      filtered: []
      view: steps-view
      step: ""
    cmds:
      ui: downloading-view
      events: ready
  decoders:
    http:
      tests:
        tests:
          status: 200
          body:
            any: list
    ui:
      query:
        query:
          any: text
      clear-search:
        clear-search: ""
      show-step:
        show-step:
          any: text
      show-steps:
        show-steps:
          any: object
    events:
      ready:
        ready:
          any: object
      downloaded:
        downloaded:
          any: object
      indexed:
        indexed:
          any: object
  update:
    ready:
      cmds:
        http: get-tests
    tests:
      model:
        tests: @data.tests.body
      cmds:
        ui: indexing-view
        events: downloaded
    downloaded:
      model:
        let:
          tests: @model.tests
        in:
          indexed:
            encoder: index-data
            params:
              scenarios: @tests
      cmds:
        events: indexed
    indexed:
      model:
        filtered: @model.indexed.$
      cmds:
        ui: layout-view
    query:
      model:
        query: @data.query
        filtered:
          encoder: filter-data
          params:
            steps: @model.indexed.$
            query: @model.query
      cmds:
        ui: {}
    clear-search:
      model:
        query: ""
        filtered: @model.indexed.$
      cmds:
        ui: {}
    show-step:
      model:
        step:
          resolve:
            - model.indexed
            - @data.show-step
        view: step-view
      cmds:
        ui: {}
    show-steps:
      model:
        view: steps-view
      cmds:
        ui: {}
  encoders:
    ready:
      ready: {}
      delay: @delay
    downloaded:
      downloaded: {}
      delay: @delay
    indexed:
      indexed: {}
      delay: @delay
    get-tests:
      method: get
      path: /tests.json
      as: tests
    index-data:
      pipeline:
        - flat_map: @scenarios
          as: scenario
          with:
            map: @scenario.steps
            as: step
            with:
              merge:
                - @step
                - tags: @scenario.tags
        - filter: {}
          with:
            spec:
              http:
                any: object
        - map: {}
          as: step
          with:
            merge:
              - @step
              - tags:
                  concat:
                    - @step.spec.http.method
                    - text: @step.output.latest.status
                    - @step.tags
        - index: {}
    filter-data:
      filter: @steps
      with:
        one_of:
          - title:
              like: @query
          - tags:
              with:
                like: @query
          - output:
              latest:
                status:
                  like: @query

    search-enabled:
      equal:
        - steps-view
        - @view
    steps-view:
      tag: div
      attrs:
        class: columns is-12 is-multiline
      children:
        loop: @filtered
        with: step-item-view
    step-item-view:
      tag: div
      attrs:
        key: @id
        class: column is-one-third item-view
        onclick:
          show-step: @id
        style:
          cursor: pointer
      children:
        - view: summary-view
    step-view:
      tag: div
      attrs:
        key: @step.id
      children:
        - tag: p
          attrs:
            style:
              margin-bottom: 10px
          children:
            - tag: a
              attrs:
                class: link
                onclick:
                  show-steps: {}
              children:
                - Back

        - view: summary-view
          params: @step
        - view: step-section-view
          params:
            title: Request
            code:
              take: [method, url, query, headers, body]
              from: @step.output.latest.request
        - view: step-section-view
          params:
            title: Response
            code:
              take: [status, headers, body]
              from: @step.output.latest
    step-section-view:
      tag: div
      attrs:
        class: box column is-radiusless is-shadowless
        style:
          margin-bottom: 25px
      children:
        - view: tag-view
          params:
            label: @title
            color: light
            size: normal
        - code:
            style:
              class: has-background-white
            source: @code
    summary-view:
      tag: div
      attrs:
        class: box column is-radiusless is-shadowless
      children:
        - tag: h5
          attrs:
            class: has-text-weight-normal
          children:
            - @title
        - view: tags-view
          params:
            tags:
              pipeline:
                - map: @tags
                  with:
                    label: @item
                    color: light
                    size: normal
                - combine: {}
                  with:
                    - label:
                        format: "{{ time }}ms"
                      color: light
                      size: small
    tags-view:
      tag: div
      attrs:
        style:
          margin-top: 5px
        class: tags
      children:
        loop: @tags
        with: tag-view
    tag-view:
      tag: span
      attrs:
        class:
          format: "tag tag-{{size}} is-{{color}}"
      children:
        - capitalize: @label
