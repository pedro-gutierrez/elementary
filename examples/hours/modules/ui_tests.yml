kind: module
name: ui_tests
spec:
  init:
    model:
      tests: []
      mode: scenarios
      query: ""
      filtered: []
    cmds:
      http: get-tests
  decoders:
    http:
      tests:
        tests:
          status: 200
          body:
            any: list
    ui:
      query:
        query:
          any: text
      clear-search:
        clear-search: ""
      set-mode:
        mode:
          any: text
  update:
    tests:
      model:
        tests: @data.tests.body
        filtered: @data.tests.body
      cmds:
        ui: {}
    query:
      model:
        query: @data.query
        filtered:
          either:
            - when:
                equal:
                  - ""
                  - @data.query
              then: @model.tests
            - switch: @model.mode
              case:
                steps:
                  pipeline:
                    - map: @model.tests
                      with: @steps
                    - flatten: {}
                    - filter:
                        title: @data.query
                scenarios:
                  pipeline:
                    - filter: @model.tests
                      with:
                        title:
                          like: @data.query
      cmds:
        ui: {}
    clear-search:
      model:
        query: ""
        filtered: @model.tests
      cmds:
        ui: {}
    set-mode:
      model:
        mode: @data.mode
      cmds:
        ui: {}
  encoders:
    get-tests:
      method: get
      path: /tests.json
      as: tests
    tests-view:
      tag: div
      children:
        loop: @filtered
        with: scenario-item-view
    scenario-item-view:
      tag: div
      attrs:
        class: box
      children:
        - tag: h5
          attrs:
            class: title is-5
          children:
            - @title
        - tag: div
          attrs:
            class: subtitle
          children:
            - view: tags-view
              params:
                tags:
                  - label: @status
                    color: success
                  - label:
                      format: "{{ time }}ms"
                    color: light
        - view: steps-view
    steps-view:
      tag: div
      children:
        loop: @steps
        with: step-item-view
    step-item-view:
      tag: div
      children:
        - view: icon-view
          params:
            icon:
              either:
                - when:
                    regex: Given
                    in: @title
                  then: fas fa-thumbtack
                - when:
                    regex: When
                    in: @title
                  then: fas fa-upload
                - then: fas fa-check
        - @title
    tags-view:
      tag: div
      attrs:
        class: tags
      children:
        loop: @tags
        with: tag-view
    tag-view:
      tag: span
      attrs:
        class:
          format: "tag is-{{color}}"
      children:
        - capitalize: @label
    icon-view:
      tag: span
      attrs:
        class: icon
      children:
        - tag: i
          attrs:
            class: @icon
