kind: module
name: ui_tests
spec:
  init:
    model:
      delay: 0
      tests: []
      indexed: {}
      mode: scenarios
      query: ""
      filtered: []
      view: scenarios-view
      scenario: {}
      step: {}
    cmds:
      ui: downloading-view
      events: ready
  decoders:
    http:
      tests:
        tests:
          status: 200
          body:
            any: list
    ui:
      query:
        query:
          any: text
      clear-search:
        clear-search: ""
      set-mode:
        mode:
          any: text
      show-scenario:
        show-scenario:
          any: text
      show-step:
        show-step:
          any: text
    events:
      ready:
        ready:
          any: object
      downloaded:
        downloaded:
          any: object
      indexed:
        indexed:
          any: object
  update:
    ready:
      cmds:
        http: get-tests
    tests:
      model:
        tests: @data.tests.body
      cmds:
        ui: indexing-view
        events: downloaded
    downloaded:
      model:
        let:
          tests: @model.tests
        in:
          indexed:
            encoder: index-data
            params:
              scenarios: @tests
      cmds:
        events: indexed
    indexed:
      model:
        filtered: @model.indexed.$
      cmds:
        ui: layout-view
    query:
      model:
        query: @data.query
        filtered:
          encoder: filter-data
          params:
            steps: @model.indexed.$
            query: @model.query
      cmds:
        ui: {}
    clear-search:
      model:
        query: ""
        filtered: @model.indexed.$
      cmds:
        ui: {}
    set-mode:
      model:
        mode: @data.mode
        filtered:
          encoder: filter-data
          params:
            tests: @model.tests
            query: @model.query
            mode: @data.mode
        view:
          encoder: view-for-mode
          params:
            mode: @data.mode
        scenario: {}
        step: {}
      cmds:
        ui: {}
    show-scenario:
      model:
        mode: scenarios
        scenario:
          resolve:
            - model.indexed
            - @data.show-scenario
        view: scenario-view
        step: {}
      cmds:
        ui: {}
    show-step:
      model:
        let:
          step:
            resolve:
              - model.indexed
              - @data.show-step
        in:
          mode: steps
          step: @step
          view: step-view
          scenario:
            resolve:
              - model.indexed
              - @step.scenario
      cmds:
        ui: {}
  encoders:
    ready:
      ready: {}
      delay: @delay
    downloaded:
      downloaded: {}
      delay: @delay
    indexed:
      indexed: {}
      delay: @delay
    get-tests:
      method: get
      path: /tests.json
      as: tests
    index-data:
      pipeline:
        - flat_map: @scenarios
          as: scenario
          with:
            map: @scenario.steps
            as: step
            with:
              merge:
                - @step
                - tags: @scenario.tags
        - filter: {}
          with:
            spec:
              http:
                any: object
        - map: {}
          as: step
          with:
            merge:
              - @step
              - tags:
                  concat:
                    - @step.tags
                    - text: @step.output.latest.status
        - index: {}
    filter-data:
      filter: @steps
      with:
        one_of:
          - tags:
              with:
                like: @query
          - spec:
              http:
                url:
                  with:
                    like: @query
          - output:
              latest:
                status:
                  like: @query
    view-for-mode:
      format: "{{ mode }}-view"
    scenarios-view:
      tag: div
      attrs:
        class: columns is-12 is-multiline
      children:
        loop: @filtered
        with: scenario-item-view
    steps-view:
      tag: div
      attrs:
        class: columns is-12 is-multiline
      children:
        loop: @filtered
        with: step-item-view
    scenario-item-view:
      tag: div
      attrs:
        key: @id
        class: pointer column is-one-third item-view
        onclick:
          show-scenario: @id
      children:
        - view: summary-view
    step-item-view:
      tag: div
      attrs:
        key: @id
        class: pointer column is-full
        onclick:
          show-step: @id
      children:
        - view: summary-view
    scenario-view:
      tag: div
      attrs:
        class: columns is-12 is-multiline
        key: @scenario.id
      children:
        loop: @scenario.steps
        with: step-item-view
    step-view:
      tag: div
      attrs:
        key: @step.id
      children:
        - view: step-section-view
          params:
            title: Output
            code: @step.output
        - view: step-section-view
          params:
            title: Spec
            code: @step.spec
        - view: step-section-view
          params:
            title: Data
            code: @step.context
    step-section-view:
      tag: div
      attrs:
        style:
          margin-bottom: 25px
      children:
        - tag: h5
          attrs:
            class: title is-5
          children:
            - @title
        - code:
            source: @code
    summary-view:
      tag: div
      attrs:
        class: box column is-radiusless is-shadowless
      children:
        - tag: h5
          attrs:
            class: has-text-weight-normal
          children:
            - @title
        - view: tags-view
          params:
            tags:
              pipeline:
                - map: @tags
                  with:
                    label: @item
                    color: light
                    size: normal
                - combine: {}
                  with:
                    - label:
                        format: "{{ time }}ms"
                      color: light
                      size: small
    tags-view:
      tag: div
      attrs:
        class: tags
      children:
        loop: @tags
        with: tag-view
    tag-view:
      tag: span
      attrs:
        class:
          format: "tag tag-{{size}} is-{{color}}"
      children:
        - capitalize: @label
    breadcrumbs-view:
      tag: section
      attrs:
        class: section
      children:
        - tag: div
          attrs:
            class: container
          children:
            - tag: nav
              attrs:
                class: breadcrumb
                aria-label: breadcrumbs
              children:
                - tag: ul
                  children:
                    - view: breadcrumb-item-view
                      params:
                        label: @mode
                        onclick:
                          mode: @mode
                    - view: breadcrumb-item-view
                      when:
                        is_set: @scenario
                      params:
                        label: @scenario.title
                        onclick:
                          show-scenario: @scenario.id
                    - view: breadcrumb-item-view
                      when:
                        is_set: @step
                      params:
                        label: @step.title
                        onclick:
                          show-step: @step.id

    breadcrumb-item-view:
      tag: li
      children:
        - tag: a
          attrs:
            class: is-capitalized
            onclick: @onclick
            href: "#"
          children:
            - @label
