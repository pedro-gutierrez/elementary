kind: module
name: ui_tests
spec:
  init:
    model:
      tests: []
      mode: scenarios
      query: ""
      filtered: []
    cmds:
      http: get-tests
  decoders:
    http:
      tests:
        tests:
          status: 200
          body:
            any: list
    ui:
      query:
        query:
          any: text
      clear-search:
        clear-search: ""
      set-mode:
        mode:
          any: text
  update:
    tests:
      model:
        tests: @data.tests.body
        filtered:
          encoder: filtered
          params:
            tests: @data.tests.body
            query: @model.query
            mode: @model.mode
      cmds:
        ui: {}
    query:
      model:
        query: @data.query
        filtered:
          encoder: filtered
          params:
            tests: @model.tests
            query: @model.query
            mode: @model.mode
      cmds:
        ui: {}
    clear-search:
      model:
        query: ""
        filtered:
          encoder: filtered
          params:
            tests: @model.tests
            query: "" 
            mode: @model.mode
      cmds:
        ui: {}
    set-mode:
      model:
        mode: @data.mode
        filtered: 
          encoder: filtered
          params:
            tests: @model.tests
            query: @model.query
            mode: @data.mode
      cmds:
        ui: {}
  encoders:
    get-tests:
      method: get
      path: /tests.json
      as: tests
    tests-view:
      tag: div
      children:
        loop: @filtered
        with: scenario-item-view
    filtered:
      switch: @mode
      case:
        steps:
          pipeline:
            - flat_map: @tests
              with: @steps
            - filter: @items
              with:
                title: 
                  like: @query
            - unique: @items
              by: @title
        scenarios:
          pipeline:
            - filter: @tests
              with:
                title:
                  like: @query
    scenario-item-view:
      tag: div
      attrs:
        class: box
      children:
        - view: tags-view
          params:
            tags:
              - label: @status
                color: success
              - label:
                  format: "{{ time }}ms"
                color: light
        - tag: h5
          attrs:
            class: title is-5
          children:
            - @title
    steps-view:
      tag: div
      children:
        loop: @steps
        with: step-item-view
    step-item-view:
      tag: div
      children:
        - view: icon-view
          params:
            icon:
              either:
                - when:
                    regex: Given
                    in: @title
                  then: fas fa-thumbtack
                - when:
                    regex: When
                    in: @title
                  then: fas fa-upload
                - then: fas fa-check
        - @title
    tags-view:
      tag: div
      attrs:
        class: tags is-pulled-right
      children:
        loop: @tags
        with: tag-view
    tag-view:
      tag: span
      attrs:
        class:
          format: "tag is-{{color}}"
      children:
        - capitalize: @label
    icon-view:
      tag: span
      attrs:
        class: icon
      children:
        - tag: i
          attrs:
            class: @icon
