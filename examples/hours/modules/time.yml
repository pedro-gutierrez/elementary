kind: module
name: time
spec:
  decoders:
    http:
      log:
        method: POST
        body:
          id:
            any: text
          project:
            any: text
          time:
            any: number
          description:
            any: text
    store:
      not_found:
        project: not_found
      not_allowed:
        project:
          one_of:
            - users:
                empty: list
            - users:
                list:
                  without:
                    id: @user.id
            - packages:
                empty: list
            - packages:
                list:
                  timeLeft: 0
      allowed:
        project:
          users:
            list:
              with:
                id: @user.id
          packages:
            list:
              with:
                id:
                  any: text
                timeLeft:
                  greater_than: 0
      created: created
  update:
    log:
      model:
        logEntry: @data.body
      cmds:
        store: find_project
    not_found:
      cmds:
        return: not_found
    not_allowed:
      cmds:
        return: unauthorized
    allowed:
      model:
        package:
          first: @data.project.packages
      cmds:
        store: create
  encoders:
    find_project:
      store: @store
      fetch:
        id: @logEntry.project
      from: projects
      as: project
    query:
      store: @store
      find: @query
      from: time
      as: time
    create:
      store: @store
      insert:
        merge:
          - @logEntry
          - created:
              now: {}
            user: @user.id
            package: @package.id
      into: time
