kind: module
name: fullpass_resolve_event 
spec:
  decoders:
    caller:
      resolve:
        ref:
          any: text
        identity:
          any: text
        ts:
          any: date
    facebook:
      noEvent: no_such_event
      event:
        any: object
    service:
      location:
        address:
          any: text
        location:
          lat:
            any: number
          lon:
            any: number
      noLocation: noLocation
    store:
      updated:
        any: number
    stream:
      streamed: true
  update:
    resolve:
      model:
        event: "@data"
      cmds:
        facebook: resolveEvent
    noEvent:
      cmds:
        stream: noEvent
    noLocation:
      cmds:
        stream: noLocation
    event:
      model:
        event: 
          merge:
            - "@data"
            - "@model.event"
      cmds:
        service: location
    location:
      model:
        event:
          merge:
            - "@data"
            - "@model.event"
      cmds:
        store: resolved
    updated:
      cmds:
        slack: resolved_alert
    streamed: {}
  encoders:
    resolveEvent:
      object:
        resolve: "@event.ref"
    location:
      app: geoLocation
      params:
        query: 
          join:
            - maybe: "@event.place"
            - maybe: "@event.street"
            - maybe: "@event.zip"
            - maybe: "@event.area"
            - maybe: "@event.country"
          using: " "
    noEvent:
      write: "@event"
      to: events_unknown
    noLocation:
      write: "@event"
      to: events_unlocated
    resolved:
      store: "@store"
      ensure: "@event"
      where:
        id: "@event.id"
      into: "events_view"
    resolved_alert:
      object:
        channel: events
        text:
          format: "Succesfully resolved event *{{ title }}* with id *{{ id }}*"
          params: "@event"
