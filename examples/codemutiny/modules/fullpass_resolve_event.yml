kind: module
name: fullpass_resolve_event 
spec:
  init:
    allowed:
      - kiz
      - semba
      - urban
      - zouk
      - afr
      - congress
      - fest
      - toma
      - salsa
      - bachata
      - latin
      - lisbon
      - your dj
      - sbk
      - sensual
      - temptation
      - tarrax
      - mambo
      - dance
      - danse
      - baila
  decoders:
    caller:
      resolve:
        ref:
          any: text
        identity:
          any: text
        ts:
          any: date
    facebook:
      noEvent: no_such_event
      eventAllowed:
        having:
          title:
            matchingSome: "@allowed"
      eventBlocked:
        having:
          title:
            matchingNone: "@allowed"
    service:
      location:
        address:
          any: text
        location:
          lat:
            any: number
          lon:
            any: number
      noLocation: noLocation
    stream:
      streamed: true
    store:
      alreadyResolved:
        resolved:
          any: object
      notResolved:
        resolved: not_found
      notLocated:
        unlocated:
          any: object
      newEvent:
        unlocated: not_found
  update:
    resolve:
      model:
        event: "@data"
      cmds:
        store: findResolved
    alreadyResolved: {}
    notResolved:
      cmds:
        store: findUnLocated
    notLocated: {}
    newEvent:
      cmds:
        facebook: resolveEvent
    noEvent:
      cmds:
        stream: noEvent
    noLocation:
      cmds:
        stream: noLocation
    eventAllowed:
      model:
        event: 
          merge:
            - "@data"
            - "@model.event"
      cmds:
        service: location
    eventBlocked:
      model:
        event: 
          merge:
            - "@data"
            - "@model.event"
      cmds:
        stream: eventBlocked
    location:
      model:
        event:
          merge:
            - "@data"
            - "@model.event"
      cmds:
        stream: resolved
    streamed: {}
  encoders:
    findResolved:
      store: "@store"
      fetch:
        ref: "@event.ref"
      from: events_resolved
      as: resolved
    findUnLocated:
      store: "@store"
      fetch:
        ref: "@event.ref"
      from: events_unlocated
      as: unlocated
    resolveEvent:
      object:
        resolve: "@event.ref"
    location:
      app: geoLocation
      params:
        query: 
          join:
            - maybe: "@event.place"
            - maybe: "@event.street"
            - maybe: "@event.zip"
            - maybe: "@event.area"
            - maybe: "@event.country"
          using: " "
    noEvent:
      write: "@event"
      to: events_unknown
    eventBlocked:
      write: "@event"
      to: events_blocked
    noLocation:
      write: "@event"
      to: events_unlocated
    resolved:
      write: "@event"
      to: events_resolved