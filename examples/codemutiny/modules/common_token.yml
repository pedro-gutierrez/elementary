kind: module
name: common_token
spec:
  decoders:
    service:
      nonce:
        nonce:
          any: text
      nonce_verified:
        consumed: true
      nonce_not_verified:
        consumed: false
  update:
    create_session:
      cmds:
        service: create_nonce
    nonce:
      model:
        nonce: "@data.nonce"
      cmds:
        return: authorize
    get_token:
      model: "@data.query"
      cmds:
        service: consume_nonce
    nonce_verified:
      cmds:
        http: get_token
    nonce_not_verified:
      cmds:
        return: error_redirect
    invalid:
      cmds:
        return: error_redirect
    identity_updated:
      model:
        identity: "@data.identity.id"
      cmds:
        service: create_session
    session_created:
      model:
        session: "@data.session"
      cmds:
        return: session_redirect
  encoders:
    create_nonce:
      app: token
      params:
        create: "nonce"
    consume_nonce:
      app: token
      params:
        consume: "@state"
    create_session:
      app: token
      params:
        session:
          identity: "@identity"
    update_identity:
      app: "identity"
      params:
        update: "@identity"
      as: identity
