kind: module
name: health
spec:
  decoders:
    http:
      get:
        any: object
    store:
      cluster:
        cluster:
          any: list
      streams:
        streams:
          list:
            object:
              id:
                any: text
              tick:
                any: date
              host:
                any: text
  update:
    get:
      cmds:
        store: cluster
    cluster:
      model:
        cluster: "@data.cluster"
      cmds:
        store: streams
    streams:
      model:
        let:
          cluster: "@model.cluster"
          store: "@model.store"
          streams: "@data.streams"
        in:
          data:
            encoder: health
      cmds:
        return: data
  encoders:
    cluster:
      store: "@store"
      from: cluster
      as: cluster
    streams:
      store: "@store"
      from: streams
      as: streams
    streamInfo:
      name: "@id"
      idle:
        durationSince: "@tick"
      host: "@host"
    hostInfo:
      host: "@host"
      size: "@size"
      partition: "@partition"
      lastSeen:
        durationSince: "@timestamp"
    health:
      object:
        cluster:
          map: "@cluster"
          with: 
            encoder: hostInfo
        streams:
          map: "@streams"
          as: stream
          with:
            encoder: streamInfo
        memory:
          memory: {}