kind: module
name: health
spec:
  decoders:
    http:
      get:
        any: object
    store:
      streams:
        streams:
          list:
            object:
              id:
                any: text
              tick:
                any: date
              node:
                any: text
  update:
    get:
      cmds:
        store: streams 
    streams:
      model:
        let:
          store: "@model.store"
          streams: "@data.streams"
        in:
          data:
            encoder: health
      cmds:
        return: data
  encoders:
    streams:
      store: "@store"
      from: streams
      as: streams
    streamInfo:
      object:
        name: "@id"
        idle:
          durationSince: "@tick"
        node: "@node"
    health:
      object:
        cluster:
          cluster: {}
        streams:
          map: "@streams"
          as: stream
          with:
            encoder: streamInfo
        memory:
          memory: {}