kind: module
name: billing_subscription_approved
spec:
  decoders:
    http:
      approved:
        query:
          nonce:
            any: text
          subscription_id:
            any: text
    store:
      not_found:
        approved: 0 
      updated:
        approved: 1
    service:
      authorized:
        token:
          meta:
            subscription:
              any: text
            session:
              any: text
            identity:
              any: text
      unauthorized:
        token: not_found
  update:
    approved:
      model:
        token: "@data.query.nonce"
        external: "@data.query.subscription_id"
      cmds:
        service: check_token
    authorized:
      model:
        session: "@data.token.meta.session"
        identity: "@data.token.meta.identity"
        subscription: "@data.token.meta.subscription"
      cmds:
        store: update_subscription
    updated:
      cmds:
        return: confirmation_page
    unauthorized:
      cmds:
        return: unauthorized_subscription_page
    not_found:
      cmds:
        return: unknown_subscription_page
  encoders:
    check_token:
      app: token
      params:
        check: "@token"
    update_subscription:
      store: "@store"
      update:
        approved:
          now: {}
      where:
        id: "@subscription"
        gateway:
          name: paypal
          id: "@external"
        identity: "@identity"
        approved: null
      into: subscriptions
      as: approved
    confirmation_page:
      status: 302
      headers:
        location:
          format: "{{ baseUrl }}/#/subscription/approved?session={{ session }}"
    unauthorized_subscription_page:
      status: 302
      headers:
        location:
          format: "{{ baseUrl }}/#/subscription/unauthorized"
    unknown_subscription_page:
      status: 302
      headers:
        location:
          format: "{{ baseUrl }}/#/subscription/unknown"
